# Trino Building Block Applications
# Demonstrates federated queries and cross-system analytics using Trino

load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_java//java:defs.bzl", "java_binary", "java_library")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(default_visibility = ["//visibility:public"])

# Python examples
py_library(
    name = "trino_python_common",
    srcs = ["python/trino_common.py"],
    deps = [],
)

py_binary(
    name = "basic_queries",
    srcs = ["python/basic_queries.py"],
    deps = [":trino_python_common"],
    main = "python/basic_queries.py",
)

py_binary(
    name = "federated_queries",
    srcs = ["python/federated_queries.py"],
    deps = [":trino_python_common"],
    main = "python/federated_queries.py",
)

py_binary(
    name = "performance_analysis",
    srcs = ["python/performance_analysis.py"],
    deps = [":trino_python_common"],
    main = "python/performance_analysis.py",
)

# Java examples
java_library(
    name = "trino_java_common",
    srcs = ["java/TrinoCommon.java"],
    deps = [],
)

java_binary(
    name = "BasicQueries",
    srcs = ["java/BasicQueries.java"],
    deps = [":trino_java_common"],
    main_class = "BasicQueries",
)

java_binary(
    name = "FederatedQueries",
    srcs = ["java/FederatedQueries.java"],
    deps = [":trino_java_common"],
    main_class = "FederatedQueries",
)

# C++ examples
cc_library(
    name = "trino_cpp_common",
    srcs = ["cpp/trino_common.cpp"],
    hdrs = ["cpp/trino_common.h"],
    deps = [],
)

cc_binary(
    name = "basic_queries_cpp",
    srcs = ["cpp/basic_queries.cpp"],
    deps = [":trino_cpp_common"],
)

# Convenience targets
filegroup(
    name = "all_python_examples",
    srcs = [
        ":basic_queries",
        ":federated_queries", 
        ":performance_analysis",
    ],
)

filegroup(
    name = "all_java_examples",
    srcs = [
        ":BasicQueries",
        ":FederatedQueries",
    ],
)

filegroup(
    name = "all_cpp_examples",
    srcs = [
        ":basic_queries_cpp",
    ],
)

filegroup(
    name = "all_trino_examples",
    srcs = [
        ":all_python_examples",
        ":all_java_examples",
        ":all_cpp_examples",
    ],
)
